const HtmlWebpackPlugin = require('html-webpack-plugin');
// const BabelMinifyWebpackPlugin = require('babel-minify-webpack-plugin');
const path = require('path');
const webpack = require('webpack');

const rootDir = path.resolve(__dirname, '../..');

module.exports = {
  entry: {
    app: [ path.join(rootDir, 'app/index.js') ]
  },
  output: {
    path: path.join(rootDir, 'build'),
    publicPath: '/assets/',
    filename: '[name].bundle.js'
  },
  plugins: [
    new HtmlWebpackPlugin({
      inject: true, // Inject all files that are generated by webpack, e.g. bundle.js
      template: path.join(rootDir, 'app/index.html'),
    }),
    // new BabelMinifyWebpackPlugin()
  ],
  module: {
    rules: [
      {
        test: /\.jsx?$/,
        exclude: /node_modules/,
        use: [
          {
            loader: 'babel-loader',
            options: {
              presets: [ 'react', 'stage-2' ]
            }
          }
        ]
      },
      {
        test: /\.(jpg|png|gif)$/,
        use: [
          {
            loader: 'file-loader',
            options: {
              outputPath: 'img/'
            }
          }
        ]
      }
    ]
  }
};
